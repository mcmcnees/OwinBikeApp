@model BikeMgrWeb.Models.BikeDetailView

@{
    ViewBag.Title = "Create a Bike";
    Layout = "~/Views/Shared/_LayoutDialog.cshtml";
}

<h2 class="mt-3">Create a Bike</h2>

@using (Html.BeginForm("Edit", "Bike", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-3">
            <input type="submit" value="Save" class="btn btn-primary mb-2" />
            <a href="~/Bike/Details/@Model.ID" class="btn btn-secondary mb-2">Cancel</a>
        </div>
        <div class="col-md-7">
            <a href="~/Bike" class="btn btn-info">Back To List</a>
        </div>
        <div class="col-md-2">
            <button type="button" class="btn btn-danger float-right" data-toggle="modal" data-target="#modDelete">Delete</button>
        </div>
    </div>

    if (!String.IsNullOrWhiteSpace(ViewBag.FileResult))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.FileResult
        </div>
    }

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <input hidden id="ID" name="ID" value="@Model.ID" />

    <div class="form-row mt-2">
        <div class="form-group col">
            @Html.LabelFor(model => model.Name)
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @aria_label = "Model Name" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col">
            @Html.LabelFor(model => model.Brand)
            @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", @aria_label = "Brand" } })
            @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Wheels)
            @Html.EditorFor(model => model.Wheels, new { htmlAttributes = new { @class = "form-control", @aria_label = "Number of wheels" } })
            @Html.ValidationMessageFor(model => model.Wheels, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.FrameMaterial)
            @Html.EditorFor(model => model.FrameMaterial, new { htmlAttributes = new { @class = "form-control", @aria_label = "Frame Material" } })
            @Html.ValidationMessageFor(model => model.FrameMaterial, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.BikeType)
            @Html.DropDownList("BikeType.ID", (IEnumerable<SelectListItem>)Model.BikeTypes, "Choose...", htmlAttributes: new { @class = "form-control", @required = "true", @aria_label = "Bike Type" })
            @Html.ValidationMessageFor(model => model.BikeType, "", new { @class = "text-danger" })
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Price)
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @aria_label = "Price" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <label for="file">Image</label>
    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
        </div>
        <div class="custom-file">
            <input type="file" class="custom-file-input" id="file" name="file" aria-describedby="inputGroupFileAddon01">
            <label class="custom-file-label" for="file">Choose file</label>
        </div>
    </div>

    <div class="form-row">
        @{
            if (Model.ImageLocation != null)
            {
                <img src="@Model.ImageLocation" class="img-fluid" alt="Responsive image">
                <input hidden id="ImageLocation" name="ImageLocation" value="@Model.ImageLocation" />
            }
            else
            {
                <label>No image on file</label>
            }
        }
    </div>

}

@Html.Partial("_BikeDeleteDialog")

@section scripts {
    <script src="/Scripts/bs-custom-file-input.min.js"></script>
    <script>
    $(document).ready(function () {
        bsCustomFileInput.init()
    })
    </script>
}