@using BikeMgrWeb.Models;
@model BikeMgrWeb.Models.BikeIndexView<BikeMgrWeb.Models.Bike>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Bike List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="mt-3">Bike List</h2>
@if (@ViewBag.AlertMsg != null)
{
    <div class="alert alert-warning alert-dismissible fade show" role="alert">
        @ViewBag.AlertMsg
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<div class="btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with list options">

    @if (User.Identity.HasPermission("write"))
    {
        <div class="btn-group" role="group" aria-label="First group">
            <a href="../Bike/Create" class="btn btn-primary mb-2">Create New</a>
        </div>
    }
    <div class="input-group">
        @using (Html.BeginForm("Index", "Bike", FormMethod.Get, new { @class = "form-inline my-2 my-lg-0 mr-2" }))
        {
            <input id="sortOrder" name="sortOrder" type="hidden" placeholder="sortOrder" value="@Model.CurrentSort" />
            <span>Name/Brand:&nbsp;</span>
            <input id="search" name="search" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search" value="@Model.CurrentFilter">
            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
        }
    </div>
</div>

<table class="table table-hover">
    <thead class="thead-dark">
        <tr>
            <th>
                @Html.ActionLink("Model Name", "Index", new { sortOrder = Model.NameSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th>
                @Html.ActionLink("Brand", "Index", new { sortOrder = Model.BrandSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th>
                @Html.ActionLink("No of wheels", "Index", new { sortOrder = Model.WheelSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th>
                @Html.ActionLink("Frame Material", "Index", new { sortOrder = Model.FrameSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th>
                @Html.ActionLink("Type", "Index", new { sortOrder = Model.TypeSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th>
                @Html.ActionLink("Price", "Index", new { sortOrder = Model.PriceSort, currentFilter = Model.CurrentFilter, page = Model.PageNo }, new { @class = "column-header-a" })
            </th>
            <th></th>
        </tr>
    </thead>

    @foreach (var item in Model.Items)
    {
<tr>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.Name)
    </td>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.Brand)
    </td>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.Wheels)
    </td>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.FrameMaterial)
    </td>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.BikeType.TypeName)
    </td>
    <td data-href="../Bike/Details/@item.ID">
        @Html.DisplayFor(modelItem => item.Price)
    </td>
    <td>
        <a href="../Bike/Edit/@item.ID" class="fa fa-edit"></a>
        @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
        <a href="#" class="fa fa-trash-o" data-toggle="modal" data-target="#modDelete" data-id="@(item.ID)" data-name="@item.Name"></a>
        <a href="#" data-toggle="modal" data-target="#modDelete" data-id="@(item.ID)" data-name="@item.Name">Delete</a>
    </td>
</tr>
    }

</table>

<div class="modal fade" id="modDelete" tabindex="-1" role="dialog" aria-labelledby="Delete Dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Bike</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="modDeleteBody" class="modal-body">
                Are you sure you want to delete the ..Name.. bike?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <a id="modDeleteAnchor" href="../Bike/Delete/" class="btn btn-primary">Delete</a>
            </div>
        </div>
    </div>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a class="page-link" href="../Bike/Index?page=1&sortOrder=@Model.CurrentSort&currentFilter=@Model.CurrentFilter" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item @prevDisabled">
            <a class="page-link" href="../Bike/Index?page=@(Model.PageNo-1)&sortOrder=@Model.CurrentSort&currentFilter=@Model.CurrentFilter" aria-label="Previous">
                <span aria-hidden="true">&#8249;</span>
            </a>
        </li>
        @{
            int pageOffset = Model.PageNo - 2 < 1 ? 1 : Model.PageNo - 2;
            if (Model.PageNo > Model.TotalPages - 2 && Model.TotalPages > 4)
            {
                pageOffset = Model.TotalPages - 5 + Model.TotalPages - Model.PageNo;
                if (Model.PageNo == Model.TotalPages) { pageOffset = Model.TotalPages - 4; }
            }
            if (pageOffset == 0) { pageOffset = 1; }
            int pageCounter = 1;
            while (pageCounter <= 5 && pageOffset <= Model.TotalPages)
            {
                if (pageOffset == @Model.PageNo)
                {
                    <li class="page-item active" aria-current="page">
                        <a class="page-link" href="#">@Model.PageNo<span class="sr-only">(current)</span></a>
                    </li>
                }
                else
                {
                    <li class="page-item"><a class="page-link" href="../Bike/Index?page=@pageOffset&sortOrder=@Model.CurrentSort&currentFilter=@Model.CurrentFilter">@pageOffset</a></li>
                }
                pageCounter++;
                pageOffset++;
            }
        }
        <li class="page-item @nextDisabled">
            <a class="page-link" href="../Bike/Index?page=@(Model.PageNo+1)&sortOrder=@Model.CurrentSort&currentFilter=@Model.CurrentFilter" aria-label="Next">
                <span aria-hidden="true">&#8250;</span>
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a class="page-link" href="../Bike/Index?page=@Model.TotalPages&sortOrder=@Model.CurrentSort&currentFilter=@Model.CurrentFilter" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
Page @Model.PageNo of @Model.TotalPages

@section scripts {
    <script>
        jQuery(document).ready(function ($) {
            $('*[data-href]').on('click', function () {
                window.location = $(this).data("href");
            });
        });

        $('#modDelete').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget)
            $(this).find('#modDeleteBody').text('Are you sure you want to delete the ' + button.data('name') + ' bike?')
            $(this).find('#modDeleteAnchor').attr('href', '/Bike/Delete/' + button.data('id'));
        })
    </script>
}